language: python
sudo: false

env:
  global:
    - OFFICIAL_REPO="pcdshub/pcdsdaq"
  # - secure: 

matrix:
  include:
    - python: 3.6
      env: BUILD_DOCS=1

install:
  - sudo apt-get update
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda install conda-build anaconda-client
  - conda update -q conda conda-build
  - conda config --append channels conda-forge
  - conda config --append channels lightsource2-tag
  # Useful for debugging any issues with conda
  - conda info -a
  # Test conda build
  - conda build -q conda-recipe --output-folder bld-dir
  - conda config --add channels "file://`pwd`/bld-dir"
  # Create test environment
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION pcdsdaq --file dev-requirements.txt
  - source activate test-environment

script:
  - coverage run run_tests.py
  - coverage report -m
  - flake8 pcdsdaq
  # Build docs
  - set -e
  - |
    if [[ -n "$DOCTR_DEPLOY_ENCRYPTION_KEY_PCDSHUB_PCDSDAQ" && $BUILD_DOCS ]]; then
      pushd docs
      make html
      popd
      doctr deploy . --built-docs docs/build/html --deploy-branch-name gh-pages
    fi

after_success:
  - codecov
  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && $TRAVIS_BRANCH == $TRAVIS_TAG  && $TRAVIS_TAG != '' && $CONDA_UPLOAD_TOKEN_TAG != '' ]]; then
      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_TAG
      anaconda upload bld-dir/linux-64/*.tar.bz2
    fi
  - |
    if [[ $TRAVIS_PULL_REQUEST == false && $TRAVIS_REPO_SLUG == $OFFICIAL_REPO && $TRAVIS_BRANCH == 'master' && $TRAVIS_TAG == '' && $CONDA_UPLOAD_TOKEN_DEV != '' ]]; then
      export ANACONDA_API_TOKEN=$CONDA_UPLOAD_TOKEN_DEV
      anaconda upload bld-dir/linux-64/*.tar.bz2
    fi
